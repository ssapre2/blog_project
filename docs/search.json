[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Hoops/index.html",
    "href": "posts/Hoops/index.html",
    "title": "We’re Playing Basketball",
    "section": "",
    "text": "This is a post for my basketball post!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello everyone! My name is Sameer Sapre and I am an analyst working in the Baseball Projects group with the Seattle Mariners.\nI am also currently a graduate student at the University of Washington studying Industrial Engineering.\nIn my free time, I enjoy playing new sports, hiking, and cooking with friends.\nOutside of work and school I am a volunteer usher with Seattle Thetre Group and am the VP of Public Relationships for my local Toastmaster’s chapter."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sameer’s Blog",
    "section": "",
    "text": "Predicting NFL Game Outcomes with nflfastR\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJun 30, 2024\n\n\nSameer Sapre\n\n\n\n\n\n\n\n\n\n\n\n\nWe’re Playing Basketball\n\n\n\n\n\n\nNBA\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 16, 2024\n\n\nSameer Sapre\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 16, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMay 13, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/nfl-game-prediction/index.html",
    "href": "posts/nfl-game-prediction/index.html",
    "title": "Predicting NFL Game Outcomes with nflfastR",
    "section": "",
    "text": "Hello everyone! Today I want to share a quick tutorial on using nflreadR to build a simple game outcome model.\nFirst, a quick introduction of nflreadR - it’s part of the nflverse family of packages in R that all easily and efficiently obtaining data from NFL games. In this post, we’ll be using its suite of functions to get the data we need to build a predictive model.\nFirst, let’s load in some important packages. We’ll load in the tidyverse for data cleaning and manipulation. The caret and lme4 packages for our model-building.\n\n# install and load packages\n#install.packages(\"nflreadr\")\nlibrary('nflreadr')\nlibrary('lme4')\nlibrary('caret')\nlibrary(\"tidyverse\")\nlibrary('pROC')"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/nfl-game-prediction/index.html#intro",
    "href": "posts/nfl-game-prediction/index.html#intro",
    "title": "Predicting NFL Game Outcomes with nflfastR",
    "section": "",
    "text": "Hello everyone! Today I want to share a quick tutorial on using nflreadR to build a simple game outcome model.\nFirst, a quick introduction of nflreadR - it’s part of the nflverse family of packages in R that all easily and efficiently obtaining data from NFL games. In this post, we’ll be using its suite of functions to get the data we need to build a predictive model.\nFirst, let’s load in some important packages. We’ll load in the tidyverse for data cleaning and manipulation. The caret and lme4 packages for our model-building.\n\n# install and load packages\n#install.packages(\"nflreadr\")\nlibrary('nflreadr')\nlibrary('lme4')\nlibrary('caret')\nlibrary(\"tidyverse\")\nlibrary('pROC')"
  },
  {
    "objectID": "posts/nfl-game-prediction/index.html#load-data",
    "href": "posts/nfl-game-prediction/index.html#load-data",
    "title": "Predicting NFL Game Outcomes with nflfastR",
    "section": "Load Data",
    "text": "Load Data\nNow that we have the relevant packages loaded, let’s get started getting our data together. Starting with game data, we’ll pull game results from 2011 - 2021\n\n# Scrape schedule Results\nload_schedules(seasons = seq(2011,2021)) -&gt; nfl_game_results \nhead(nfl_game_results)\n\n# A tibble: 6 × 46\n  game_id   season game_type  week gameday weekday gametime away_team away_score\n  &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;          &lt;int&gt;\n1 2011_01_…   2011 REG           1 2011-0… Thursd… 20:30    NO                34\n2 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    PIT                7\n3 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    ATL               12\n4 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    CIN               27\n5 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    IND                7\n6 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    TEN               14\n# ℹ 37 more variables: home_team &lt;chr&gt;, home_score &lt;int&gt;, location &lt;chr&gt;,\n#   result &lt;int&gt;, total &lt;int&gt;, overtime &lt;int&gt;, old_game_id &lt;chr&gt;, gsis &lt;int&gt;,\n#   nfl_detail_id &lt;chr&gt;, pfr &lt;chr&gt;, pff &lt;int&gt;, espn &lt;chr&gt;, ftn &lt;int&gt;,\n#   away_rest &lt;int&gt;, home_rest &lt;int&gt;, away_moneyline &lt;int&gt;,\n#   home_moneyline &lt;int&gt;, spread_line &lt;dbl&gt;, away_spread_odds &lt;int&gt;,\n#   home_spread_odds &lt;int&gt;, total_line &lt;dbl&gt;, under_odds &lt;int&gt;,\n#   over_odds &lt;int&gt;, div_game &lt;int&gt;, roof &lt;chr&gt;, surface &lt;chr&gt;, temp &lt;int&gt;, …\n\n\nWe’ve loaded our schedules in with some interesting variables to use in our model. However, it’s not quite in the format we need it to be. Ideally, we’d like to feed in 2 games and have the model give us a winner.\n\nnfl_game_results %&gt;%\n  pivot_longer(cols = c(away_team,home_team),\n               names_to = \"home_away\",\n               values_to = \"team\") %&gt;%\n  mutate(team_score = ifelse(home_away == \"home_team\",yes = home_score,no = away_score),\n         opp_score = ifelse(home_away == \"home_team\", away_score,home_score)) %&gt;%  # sort for cumulative avg\n  arrange(season,week) %&gt;%\n  select(season,game_id,team,team_score,opp_score) -&gt; team_games\n\nLet’s use pivot_longer() to rearrange our dataset and select some simple variables before making the matchup set."
  },
  {
    "objectID": "posts/nfl-game-prediction/index.html#feature-engineering",
    "href": "posts/nfl-game-prediction/index.html#feature-engineering",
    "title": "Predicting NFL Game Outcomes with nflfastR",
    "section": "Feature Engineering",
    "text": "Feature Engineering\nThen, we’ll create some features…\nFirst, cumulative points.\n\nteam_games %&gt;%\n  group_by(season,team) %&gt;%\n  mutate(cum_score_mean = cummean(team_score),\n          cum_score_opp = cummean(opp_score),\n          cum_wins = cumsum(team_score &gt; opp_score),\n          cum_losses = cumsum(team_score &lt; opp_score),\n          cum_ties = cumsum(team_score == opp_score),\n         cum_win_pct = cum_wins / (cum_wins + cum_losses),\n         cum_win_pct_lag = lag(cum_win_pct,1),\n         cum_score_lag_1 = lag(cum_score_mean,1),\n         cum_opp_lag_1 = lag(cum_score_opp,1)\n         ) %&gt;%\n  ungroup() -&gt; cum_avgs\n\nWin percentage.\n\nteam_games %&gt;%\n  group_by(season,team) %&gt;%\n  summarise(wins = sum(team_score &gt; opp_score),\n            losses = sum(team_score &lt; opp_score),\n            ties = sum(team_score == opp_score))%&gt;%\n  ungroup() %&gt;%\n  arrange(season) %&gt;%\n  group_by(team) %&gt;%\n  mutate(win_pct = wins / (wins + losses),\n         lag1_win_pct = lag(win_pct,1)) %&gt;%\n  ungroup() -&gt; team_win_pct"
  },
  {
    "objectID": "posts/nfl-game-prediction/index.html#joins",
    "href": "posts/nfl-game-prediction/index.html#joins",
    "title": "Predicting NFL Game Outcomes with nflfastR",
    "section": "Joins",
    "text": "Joins\n\nnfl_game_results %&gt;%\n  inner_join(cum_avgs, by = c('game_id','season','home_team' = 'team')) %&gt;%\n  inner_join(cum_avgs, by = c('game_id','season','away_team' = 'team'),suffix = c('_home','_away'))-&gt; w_avgs\n\n# Check for stragglers\nnfl_game_results %&gt;%\n  anti_join(cum_avgs, by = c('game_id','season','home_team' = 'team')) %&gt;%\n  nrow()\n\n[1] 0\n\n# Join previous season's results\nw_avgs %&gt;%\n  left_join(team_win_pct,by = c('season','home_team' = 'team')) %&gt;%\n  left_join(team_win_pct, by = c('away_team' = 'team','season'),suffix = c('_home','_away')) -&gt; matchups\n\n\nmatchups %&gt;%\n  head()\n\n# A tibble: 6 × 78\n  game_id   season game_type  week gameday weekday gametime away_team away_score\n  &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;          &lt;int&gt;\n1 2011_01_…   2011 REG           1 2011-0… Thursd… 20:30    NO                34\n2 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    PIT                7\n3 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    ATL               12\n4 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    CIN               27\n5 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    IND                7\n6 2011_01_…   2011 REG           1 2011-0… Sunday  13:00    TEN               14\n# ℹ 69 more variables: home_team &lt;chr&gt;, home_score &lt;int&gt;, location &lt;chr&gt;,\n#   result &lt;int&gt;, total &lt;int&gt;, overtime &lt;int&gt;, old_game_id &lt;chr&gt;, gsis &lt;int&gt;,\n#   nfl_detail_id &lt;chr&gt;, pfr &lt;chr&gt;, pff &lt;int&gt;, espn &lt;chr&gt;, ftn &lt;int&gt;,\n#   away_rest &lt;int&gt;, home_rest &lt;int&gt;, away_moneyline &lt;int&gt;,\n#   home_moneyline &lt;int&gt;, spread_line &lt;dbl&gt;, away_spread_odds &lt;int&gt;,\n#   home_spread_odds &lt;int&gt;, total_line &lt;dbl&gt;, under_odds &lt;int&gt;,\n#   over_odds &lt;int&gt;, div_game &lt;int&gt;, roof &lt;chr&gt;, surface &lt;chr&gt;, temp &lt;int&gt;, …\n\n# Indicate whether home team won\nmatchups %&gt;%\n  mutate(home_win = result &gt; 0) -&gt; matchup_results\n\nAnd … BOOM! We have a dataset with game matchups and some features to start out."
  }
]